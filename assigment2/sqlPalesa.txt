
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE payments';
  DBMS_OUTPUT.PUT_LINE('Table dropped successfully.');
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -942 THEN
      DBMS_OUTPUT.PUT_LINE('Table does not exist.');
    ELSE
      RAISE;
    END IF;
END;

/
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE loan';
  DBMS_OUTPUT.PUT_LINE('Table dropped successfully.');
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -942 THEN
      DBMS_OUTPUT.PUT_LINE('Table does not exist.');
    ELSE
      RAISE;
    END IF;
END;

/
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE client';
  DBMS_OUTPUT.PUT_LINE('Table dropped successfully.');
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -942 THEN
      DBMS_OUTPUT.PUT_LINE('Table does not exist.');
    ELSE
      RAISE;
    END IF;
END;

/

CREATE TABLE Loan_agents (
  LoanAgentId   NUMBER,
  FirstName     VARCHAR2(50) NOT NULL,
  LastName      VARCHAR2(50) NOT NULL,
  Email         VARCHAR2(100) NOT NULL,
  Phone         VARCHAR2(20) NOT NULL,
  PRIMARY KEY (LoanAgentId)
);
/

CREATE TABLE clients (
  client_id  NUMBER,
  name VARCHAR(100) NOT NULL,
  phone VARCHAR(8) NOT NULL,
  occupation VARCHAR(100) NOT NULL,
  postal_address VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL,
  CONSTRAINT client_id_pk PRIMARY KEY (client_id),
  CONSTRAINT client_id_length CHECK (LENGTH(client_id) = 9),
  CONSTRAINT client_id_number_only CHECK (REGEXP_LIKE(client_id, '^[0-9]+$'))
);
/
CREATE TABLE loan (
  loan_key NUMBER GENERATED BY DEFAULT AS IDENTITY,
  loan_amount NUMBER(38) NOT NULL,
  monthly_payment NUMBER(38) NOT NULL,
  balance NUMBER(38) NOT NULL,
  client_id NUMBER NOT NULL,
  FOREIGN KEY (client_id) REFERENCES clients (client_id),
  PRIMARY KEY (loan_key)
);
/
CREATE TABLE payments (
  payment_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  loan_no NUMBER NOT NULL,
  payment_amount NUMBER(38) NOT NULL,
  payment_date DATE NOT NULL,
  FOREIGN KEY (loan_no) REFERENCES loan (loan_key),
  PRIMARY KEY (payment_id)
);































